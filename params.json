{"name":"Pudding","tagline":"A Ruby script to notify when a new notification from the placement unit is posted on LAN webpage of the same.","body":"# [Pudding](https://github.com/vaibhav-y/pudding)\r\n\r\nInspired by Srijan Choudhary's [puAlert.php](https://github.com/srijan/puAlert), thank you for this wonderful idea!\r\n\r\n### Description\r\nPudding is a Ruby script written using mechanize to login to your PU account for you and download files related to unread notifications. But wait, there's more. This comes as a binary `pudding.exe` for all the others who didn't install ruby yet! No hassle logging in, you just need to fill up `pudding_client_config.xml` generated by pudding.exe once and you are set to go! Later planned features include polling, password hashes (Thanks Shriniwas), and an obviously required speedup\r\n\r\n\r\n### Usage\r\n\r\n[Download the release](https://github.com/vaibhav-y/pudding/releases/tag/v0.1-r13)\r\n\r\n##### Console method (You see what's happeing)\r\n1. Open your windows command prompt ([Relevant links incase you're lost](http://pcsupport.about.com/od/windows7/a/command-prompt-windows-7.htm))\r\n2. Navigate to the directory where `pudding.exe` is located\r\n3. In the command prompt type `pudding.exe` and hit `enter`, something like the image below should happen:\r\n![](http://i.imgur.com/c8bTSb4.png)\r\n4. Open `pudding_client_config.xml`, located in the same directory with notepad to see something like:\r\n\r\n\t```xml\r\n\t\r\n\t<o c=\"Configuration::AppConfig::ClientConf\">\r\n\t  <s a=\"@username\"></s>\r\n\t  <s a=\"@password\"></s>\r\n\t</o>\r\n\t```\r\n\r\n5. Fill your placement unit username as `<s a=\"@username\">f2010XYZ</s>`\r\n6. Fill your placement unit password as `<s a=\"@password\">YOUR_PASSWORD_GOES_EXACTLY_HERE</s>` \r\n7. You should be doing this, and only this (suggestions are welcome):\r\n \r\n\t![THIS IS THE ONLY WAY YOU CAN FILL THE FILE!](http://i.imgur.com/NWtliFj.png)\r\n\r\n8. Do not change `pudding_server_config.xml`, that file is very important in connecting to the PU server!\r\n9. Yes, you must fill the username and password, this is as lazy as you can get! :D\r\n\r\n\r\n##### Click method (You don't see what's happening)\r\n\r\n1. Navigate to the directory where `pudding.exe` is located\r\n2. Double click `pudding.exe` and wait till it exits\r\n3. It should have created `pudding_client_config.xml` and `pudding_server_config.xml` in the very same directory\r\n4. Edit `pudding_client_config.xml` the same way as previously described\r\n5. Same gotchas apply here too\r\n\r\n\r\n### TODO\r\n\r\n* Write Rspec Tests\r\n* Polling functionality\r\n* One time console prompt to enter password (for setting the config)\r\n* Optional UI\r\n* Write a detailed guide to filling in `pudding_client_config.xml`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}